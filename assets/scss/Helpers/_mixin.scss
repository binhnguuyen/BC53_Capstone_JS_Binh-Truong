@mixin styleText($fs, $color, $fw) {
  font-size: $fs;
  color: $color;
  font-weight: $fw;
}

@mixin styleButton($bg, $border, $radius, $color, $padding, $colorHover, $bgHover) {
  background: $bg;
  border: 2px solid $border;
  border-radius: $radius;
  color: $color;
  padding: $padding;

  &:hover {
    background: $bgHover;
    color: $colorHover;
  }
}

//Theme DarkMode
@mixin darkMode() {
  .darkMode {
    @content;
  }
}

//Responsive
$breakpoint: (
    'extra-large':1200px,
    'large': 992px,
    'medium':768px,
    'small':576px,
);

@mixin responsive($screen){
    @if(map-has-key($map: $breakpoint, $key: $screen)){
        $width: map-get($map: $breakpoint, $key: $screen);
        @media screen and (max-width: $width) {
            @content;
        }
    }
    @else{
        @warn "`${$screen}` không tồn tại trong $breakpoint"
    }
}


